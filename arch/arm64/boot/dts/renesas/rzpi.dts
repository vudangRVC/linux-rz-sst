// SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
/*
 * Device Tree Source for the RZ/G2L SBC board
 *
 * Copyright (C) 2023 Renesas Electronics Corp.
 */

/dts-v1/;
#include "r9a07g044l2.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/rzg2l-pinctrl.h>

/ {
	compatible = "rzpi", "renesas,r9a07g044l2", "renesas,r9a07g044";
	model = "NovTech RZpi board";

	aliases {
		i2c3 = "/soc/i2c@10058c00";
		ethernet0 = "/soc/ethernet@11c20000";
		ethernet1 = "/soc/ethernet@11c30000";
		serial0 = "/soc/serial@1004b800";
		i2c0 = "/soc/i2c@10058000";
		i2c1 = "/soc/i2c@10058400";
		mmc0 = "/soc/mmc@11c00000";
		mmc1 = "/soc/mmc@11c10000";
	};

	chosen {
		bootargs = "ignore_loglevel rw root=/dev/nfs ip=on";
		stdout-path = "serial0:115200n8";
	};

	memory@48000000 {
		device_type = "memory";
		reg = <0x0 0x48000000 0x0 0x38000000>;
	};

	reserved-memory {
		#address-cells = <0x2>;
		#size-cells = <0x2>;
		ranges;

		global_cma: linux,cma@58000000 {
			compatible = "shared-dma-pool";
			linux,cma-default;
			reusable;
			reg = <0x0 0x58000000 0x0 0x8000000>;
		};

		mmp_reserved: linux,multimedia {
			compatible = "shared-dma-pool";
			reusable;
			reg = <0x0 0x60000000 0x0 0x1000000>;
		};
	};

	mmngr {
		compatible = "renesas,mmngr";
		memory-region = <&mmp_reserved>;
	};

	mmngrbuf {
		compatible = "renesas,mmngrbuf";
	};

	vspm_if {
		compatible = "renesas,vspm_if";
	};

	reg_1p8v: regulator0 {
		compatible = "regulator-fixed";
		regulator-name = "fixed-1.8V";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_3p3v: regulator1 {
		compatible = "regulator-fixed";
		regulator-name = "fixed-3.3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_1p1v: regulator-vdd-core {
		compatible = "regulator-fixed";
		regulator-name = "fixed-1.1V";
		regulator-min-microvolt = <1100000>;
		regulator-max-microvolt = <1100000>;
		regulator-boot-on;
		regulator-always-on;
	};

	vccq_sdhi0: regulator-vccq-sdhi0 {
		compatible = "regulator-gpio";

		regulator-name = "SDHI0 VccQ";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		states = <3300000 1>, <1800000 0>;
		regulator-boot-on;
		gpios = <&pinctrl RZG2L_GPIO(39, 0) GPIO_ACTIVE_HIGH>;
		regulator-always-on;
	};

	regulator-usb0-vbus-otg {
		compatible = "regulator-fixed";
		regulator-name = "USB0_VBUS_OTG";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
	};

	vccq_sdhi1: regulator-vccq-sdhi1 {
		compatible = "regulator-gpio";
		regulator-name = "SDHI1 VccQ";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		gpios-states = <1>;
		gpios = <&pinctrl RZG2L_GPIO(39, 1) GPIO_ACTIVE_HIGH>;
		states = <3300000 1>, <1800000 0>;
	};

	ov5645_vdddo_1v8: 1p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vdddo";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	ov5645_vdda_2v8: 2p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vdda";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on;
	};

	ov5645_vddd_1v5: 1p5v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vddd";
		regulator-min-microvolt = <1500000>;
		regulator-max-microvolt = <1500000>;
		regulator-always-on;
	};

	hdmi-out {
		compatible = "hdmi-connector";
		type = "a";

		status = "okay";

		port {
			hdmi_con_out: endpoint {
				remote-endpoint = <&sii9022_out>;
			};
		};
	};

	x1_clk: x1-clock {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <24000000>;
	};

	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "audio-da7219";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-master = <&cpu_dai>;
		simple-audio-card,frame-master = <&cpu_dai>;

		simple-audio-card,widgets =
				"Microphone", "Microphone Jack",
				"Headphone", "Headphone Jack";
		simple-audio-card,routing =
				"MIC", "Microphone Jack",
				"Mic PGA", "ADC",
				"Mixin PGA", "ADC",
				"Mixout Left PGA", "HPL",
				"Mixout Right PGA", "HPR",
				"Headphone Jack", "HPL",
				"Headphone Jack", "HPR";

		cpu_dai: simple-audio-card,cpu {
			sound-dai = <&ssi1>;
		};

		codec_dai: simple-audio-card,codec {
			clocks = <&versa3 3>;
			sound-dai = <&da7219>;
		};
	};

	clk_ext_camera: clk_ext_camera {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <24000000>;
	};

	ov5640_vdddo_1v8: 1p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vdddo";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	ov5640_vdda_2v8: 2p8v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vdda";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on;
	};

	ov5640_vddd_1v5: 1p5v {
		compatible = "regulator-fixed";
		regulator-name = "camera_vddd";
		regulator-min-microvolt = <1500000>;
		regulator-max-microvolt = <1500000>;
		regulator-always-on;
	};

};

&pinctrl {
	pinctrl-0 = <&sound_clk_pins>;
	pinctrl-names = "default";

	adc_pins: adc {
		pinmux = <RZG2L_PORT_PINMUX(9, 0, 2)>; /* ADC_TRG */
	};

	du_pins: du {
		pinmux = <RZG2L_PORT_PINMUX(6, 0, 1)>, /* CLK */
			 <RZG2L_PORT_PINMUX(6, 1, 1)>, /* HSYNC */
			 <RZG2L_PORT_PINMUX(7, 0, 1)>, /* VSYNC */
			 <RZG2L_PORT_PINMUX(7, 1, 1)>, /* DE */
			 <RZG2L_PORT_PINMUX(8, 1, 1)>,
			 <RZG2L_PORT_PINMUX(8, 2, 1)>,
			 <RZG2L_PORT_PINMUX(9, 0, 1)>,
			 <RZG2L_PORT_PINMUX(9, 1, 1)>,
			 <RZG2L_PORT_PINMUX(10, 0, 1)>,
			 <RZG2L_PORT_PINMUX(10, 1, 1)>,
			 <RZG2L_PORT_PINMUX(12, 0, 1)>,
			 <RZG2L_PORT_PINMUX(12, 1, 1)>,
			 <RZG2L_PORT_PINMUX(13, 0, 1)>,
			 <RZG2L_PORT_PINMUX(13, 1, 1)>,
			 <RZG2L_PORT_PINMUX(13, 2, 1)>,
			 <RZG2L_PORT_PINMUX(14, 0, 1)>,
			 <RZG2L_PORT_PINMUX(15, 1, 1)>,
			 <RZG2L_PORT_PINMUX(16, 0, 1)>,
			 <RZG2L_PORT_PINMUX(16, 1, 1)>,
			 <RZG2L_PORT_PINMUX(17, 0, 1)>,
			 <RZG2L_PORT_PINMUX(17, 1, 1)>,
			 <RZG2L_PORT_PINMUX(17, 2, 1)>;
	};

	eth0_pins: eth0 {
		pinmux = <RZG2L_PORT_PINMUX(27, 1, 1)>, /* ET0_MDC */
			 <RZG2L_PORT_PINMUX(28, 0, 1)>, /* ET0_MDIO */
			 <RZG2L_PORT_PINMUX(20, 0, 1)>, /* ET0_TXC */
			 <RZG2L_PORT_PINMUX(20, 1, 1)>, /* ET0_TX_CTL */
			 <RZG2L_PORT_PINMUX(20, 2, 1)>, /* ET0_TXD0 */
			 <RZG2L_PORT_PINMUX(21, 0, 1)>, /* ET0_TXD1 */
			 <RZG2L_PORT_PINMUX(21, 1, 1)>, /* ET0_TXD2 */
			 <RZG2L_PORT_PINMUX(22, 0, 1)>, /* ET0_TXD3 */
			 <RZG2L_PORT_PINMUX(24, 0, 1)>, /* ET0_RXC */
			 <RZG2L_PORT_PINMUX(24, 1, 1)>, /* ET0_RX_CTL */
			 <RZG2L_PORT_PINMUX(25, 0, 1)>, /* ET0_RXD0 */
			 <RZG2L_PORT_PINMUX(25, 1, 1)>, /* ET0_RXD1 */
			 <RZG2L_PORT_PINMUX(26, 0, 1)>, /* ET0_RXD2 */
			 <RZG2L_PORT_PINMUX(26, 1, 1)>; /* ET0_RXD3 */
	};

	eth1_pins: eth1 {
		pinmux = <RZG2L_PORT_PINMUX(29, 0, 1)>, /* ET1_TXC */
			 <RZG2L_PORT_PINMUX(29, 1, 1)>, /* ET1_TX_CTL */
			 <RZG2L_PORT_PINMUX(30, 0, 1)>, /* ET1_TXD0 */
			 <RZG2L_PORT_PINMUX(30, 1, 1)>, /* ET1_TXD1 */
			 <RZG2L_PORT_PINMUX(31, 0, 1)>, /* ET1_TXD2 */
			 <RZG2L_PORT_PINMUX(31, 1, 1)>, /* ET1_TXD3 */
			 <RZG2L_PORT_PINMUX(33, 1, 1)>, /* ET1_RXC */
			 <RZG2L_PORT_PINMUX(34, 0, 1)>, /* ET1_RX_CTL */
			 <RZG2L_PORT_PINMUX(34, 1, 1)>, /* ET1_RXD0 */
			 <RZG2L_PORT_PINMUX(35, 0, 1)>, /* ET1_RXD1 */
			 <RZG2L_PORT_PINMUX(35, 1, 1)>, /* ET1_RXD2 */
			 <RZG2L_PORT_PINMUX(36, 0, 1)>; /* ET1_RXD3 */
	};

	i2c0_pins: i2c0 {
		pins = "RIIC0_SDA", "RIIC0_SCL";
		input-enable;
	};

	i2c1_pins: i2c1 {
		pins = "RIIC1_SDA", "RIIC1_SCL";
		input-enable;
	};

	scif0_pins: scif0 {
		pinmux = <RZG2L_PORT_PINMUX(38, 0, 1)>, /* TxD */
			 <RZG2L_PORT_PINMUX(38, 1, 1)>; /* RxD */
	};

	scif2_pins: scif2 {
		pinmux = <RZG2L_PORT_PINMUX(48, 0, 1)>, /* TxD */
			 <RZG2L_PORT_PINMUX(48, 1, 1)>, /* RxD */
			 <RZG2L_PORT_PINMUX(42, 3, 4)>, /* CTS# */
			 <RZG2L_PORT_PINMUX(42, 4, 4)>; /* RTS# */
	};

	sd0-dev-sel-hog {
		gpio-hog;
		gpios = <RZG2L_GPIO(41, 1) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "sd0_dev_sel";
	};

	sdhi0_emmc_pins: sd0emmc {
		sd0_emmc_data {
			pins = "SD0_DATA0", "SD0_DATA1", "SD0_DATA2", "SD0_DATA3",
				"SD0_DATA4", "SD0_DATA5", "SD0_DATA6", "SD0_DATA7";
			power-source = <1800>;
		};

		sd0_emmc_ctrl {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <1800>;
		};

		sd0_emmc_rst {
			pins = "SD0_RST#";
			power-source = <1800>;
		};
	};

	sdhi0_pins: sd0 {
		sd0_data {
			pins = "SD0_DATA0", "SD0_DATA1", "SD0_DATA2", "SD0_DATA3";
			power-source = <3300>;
		};

		sd0_ctrl {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <3300>;
		};

		sd0_mux {
			pinmux = <RZG2L_PORT_PINMUX(47, 0, 2)>; /* SD0_CD */
		};
	};

	sdhi0_pins_uhs: sd0_uhs {
		sd0_data_uhs {
			pins = "SD0_DATA0", "SD0_DATA1", "SD0_DATA2", "SD0_DATA3";
			power-source = <1800>;
		};

		sd0_ctrl_uhs {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <1800>;
		};

		sd0_mux_uhs {
			pinmux = <RZG2L_PORT_PINMUX(47, 0, 2)>; /* SD0_CD */
		};
	};

	sd1-pwr-en-hog {
		gpio-hog;
		gpios = <RZG2L_GPIO(39, 2) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "sd1_pwr_en";
	};

	sdhi1_pins: sd1 {
		sd1_data {
			pins = "SD1_DATA0", "SD1_DATA1", "SD1_DATA2", "SD1_DATA3";
			power-source = <3300>;
	};

		sd1_ctrl {
			pins = "SD1_CLK", "SD1_CMD";
			power-source = <3300>;
		};

		sd1_mux {
			pinmux = <RZG2L_PORT_PINMUX(19, 0, 1)>; /* SD1_CD */
		};
	};

	sdhi1_pins_uhs: sd1_uhs {
		sd1_data_uhs {
			pins = "SD1_DATA0", "SD1_DATA1", "SD1_DATA2", "SD1_DATA3";
			power-source = <1800>;
		};

		sd1_ctrl_uhs {
			pins = "SD1_CLK", "SD1_CMD";
			power-source = <1800>;
		};

		sd1_mux_uhs {
			pinmux = <RZG2L_PORT_PINMUX(19, 0, 1)>; /* SD1_CD */
		};
	};

	sound_clk_pins: sound_clk {
		pins = "AUDIO_CLK1", "AUDIO_CLK2";
		input-enable;
	};

	ssi0_pins: ssi0 {
		pinmux = <RZG2L_PORT_PINMUX(45, 0, 1)>, /* BCK */
			 <RZG2L_PORT_PINMUX(45, 1, 1)>, /* RCK */
			 <RZG2L_PORT_PINMUX(45, 2, 1)>, /* TXD */
			 <RZG2L_PORT_PINMUX(45, 3, 1)>; /* RXD */
	};

	ssi1_pins: ssi1 {
		pinmux = <RZG2L_PORT_PINMUX(44, 0, 2)>, /* BCK */
			 <RZG2L_PORT_PINMUX(44, 1, 2)>, /* RCK */
			 <RZG2L_PORT_PINMUX(44, 2, 2)>, /* TXD */
			 <RZG2L_PORT_PINMUX(44, 3, 2)>; /* RXD */
	};

	ssi2_pins: ssi2 {
		pinmux = <RZG2L_PORT_PINMUX(5, 0, 4)>,
			 <RZG2L_PORT_PINMUX(5, 1, 4)>,
			 <RZG2L_PORT_PINMUX(5, 2, 4)>;
	};

	gpt4_pins: gpt4 {
		pinmux = <RZG2L_PORT_PINMUX(43, 0, 2)>, /* Channel A */
			 <RZG2L_PORT_PINMUX(43, 1, 2)>; /* Channel B */
	};
};

&adc {
	pinctrl-0 = <&adc_pins>;
	pinctrl-names = "default";
	status = "disabled";

	/delete-node/ channel@6;
	/delete-node/ channel@7;
};

&audio_clk1 {
	clock-frequency = <11289600>;
};

&audio_clk2 {
	clock-frequency = <12288000>;
};

&cru {
	status = "okay";
};

&csi2 {
	status = "disabled";
		ports {
		port {
			csi2_in: endpoint {
				clock-lanes = <0>;
				data-lanes = <1 2>;
				remote-endpoint = <&ov5640_to_csi>;
			};
		};
	};
};

&du {
	pinctrl-0 = <&du_pins>;
	pinctrl-names = "default";

	status = "okay";

	ports {

		port@0 {
			du_out_rgb: endpoint {
				remote-endpoint = <&sii9022_in>;
			};
		};
	};
};

&eth0 {
	pinctrl-0 = <&eth0_pins>;
	pinctrl-names = "default";
	phy-handle = <&phy4>;
	phy-mode = "rgmii-id";
	status = "okay";

	phy4: ethernet-phy@4 {
		reg = <0x4>;
	};

	phy11: ethernet-phy@1 {
		reg = <0x1>;
	};
};

&eth1 {
	pinctrl-0 = <&eth1_pins>;
	pinctrl-names = "default";
	phy-handle = <&phy11>;
	phy-mode = "rgmii-id";
	status = "okay";
};

&extal_clk {
	clock-frequency = <24000000>;
};

&gpu {
	mali-supply = <&reg_1p1v>;

	/delete-property/power-domains;
};

&ostm1 {
	status = "okay";
};

&ostm2 {
	status = "okay";
};

&i2c0 {
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-names = "default";

	status = "okay";

	versa3: versa3@68 {
		compatible = "renesas,5p35023";
		reg = <0x68>;
		status = "okay";

		#clock-cells = <1>;
		clocks = <&x1_clk>;
		clock-names = "x1";

		renesas,settings = [
			80 00 11 19 4c 02 23 7f 83 19 08 a9 5f 25 24 bf
			00 14 7a e1 00 00 00 00 01 55 59 bb 3f 30 90 b6
			80 b0 45 c4 95
		];

		assigned-clocks = <&versa3 0>,
				<&versa3 1>,
				<&versa3 2>,
				<&versa3 3>,
				<&versa3 4>,
				<&versa3 5>;
		assigned-clock-rates =	<12288000>, <25000000>,
					<12000000>, <11289600>,
					<11289600>, <24000000>;
		clock-divider-read-only = <1>, <1>, <1>, <1>, <1>;
		clock-flags = <2176>, <2176>, <2176>, <2052>, <2176>, <2048>;
	};

	da7219: codec@1a {
		compatible = "dlg,da7219";
		#sound-dai-cells = <0>;
		reg = <0x1a>;
		status = "okay";

		interrupt-parent = <&pinctrl>;
		interrupts = <RZG2L_GPIO(47, 1) IRQ_TYPE_LEVEL_LOW>;

		dlg,micbias-lvl = <2600>;
		dlg,mic-amp-in-sel = "diff";
		VDD-supply = <&reg_1p8v>;
		VDDMIC-supply = <&reg_3p3v>;
		VDDIO-supply = <&reg_3p3v>;
		clock-names = "mclk";

		da7219_aad {
			dlg,btn-cfg = <50>;
			dlg,mic-det-thr = <500>;
			dlg,jack-ins-deb = <20>;
			dlg,jack-det-rate = "32ms_64ms";
			dlg,jack-rem-deb = <1>;

			dlg,a-d-btn-thr = <0xa>;
			dlg,d-b-btn-thr = <0x16>;
			dlg,b-c-btn-thr = <0x21>;
			dlg,c-mic-btn-thr = <0x3E>;

			dlg,btn-avg = <4>;
			dlg,adc-1bit-rpt = <1>;
		};
	};
};

&i2c1 {
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-names = "default";

	status = "okay";

	ov5640: camera@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;
		status = "disabled";

		clock-names = "xclk";
		clocks = <&clk_ext_camera>;
		clock-frequency = <24000000>;
		DOVDD-supply = <&ov5640_vdddo_1v8>;
		DVDD-supply = <&ov5640_vddd_1v5>;
		AVDD-supply = <&ov5640_vdda_2v8>;

		powerdown-gpios = <&pinctrl RZG2L_GPIO(19, 0) GPIO_ACTIVE_LOW>;
		reset-gpios = <&pinctrl RZG2L_GPIO(18, 1) GPIO_ACTIVE_HIGH>;

		port {
			ov5640_to_csi: endpoint {
				clock-lanes = <0>;
				data-lanes = <1 2>;
				remote-endpoint = <&csi2_in>;
			};
		};
	};

	sii9022: hdmi@39 {
		#sound-dai-cells = <0x0>;
		compatible = "sil,sii9022";
		reg = <0x39>;
		status = "okay";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;

				sii9022_in: endpoint {
					remote-endpoint = <&du_out_rgb>;
				};
			};

			port@1 {
				reg = <1>;

				sii9022_out: endpoint {
					remote-endpoint = <&hdmi_con_out>;
				};
			};
		};
	};
};

&mtu3 {
	status = "okay";
};

&ehci0 {
	memory-region = <&global_cma>;
	dr_mode = "otg";
	status = "okay";
};

&ohci0 {
	memory-region = <&global_cma>;
	dr_mode = "otg";
	status = "okay";
};

&ehci1 {
	memory-region = <&global_cma>;
	status = "okay";
};

&ohci1 {
	memory-region = <&global_cma>;
	status = "okay";
};

&hsusb {
	status = "disabled";
};

&phyrst {
	status = "okay";
};

&usb2_phy0 {
	status = "okay";
};

&usb2_phy1 {
	status = "okay";
};

&scif0 {
	pinctrl-0 = <&scif0_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&scif2 {
	pinctrl-0 = <&scif2_pins>;
	pinctrl-names = "default";

	uart-has-rtscts;
	status = "okay";

	bluetooth {
		compatible = "brcm,bcm43438-bt";
		device-wakeup-gpios = <&pinctrl RZG2L_GPIO(37, 0) GPIO_ACTIVE_LOW>;
		host-wakeup-gpios = <&pinctrl RZG2L_GPIO(37, 1) GPIO_ACTIVE_LOW>;
		status = "okay";
	};
};

/* Both eMMC and external uSD card */
&sdhi0 {
	pinctrl-0 = <&sdhi0_emmc_pins>;
	pinctrl-1 = <&sdhi0_emmc_pins>;
	pinctrl-names = "default", "state_uhs";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&reg_1p8v>;
	bus-width = <8>;
	mmc-hs200-1_8v;
	non-removable;
	fixed-emmc-driver-type = <1>;
	status = "okay";
};

&sdhi1 {
	pinctrl-0 = <&sdhi1_pins>;
	pinctrl-1 = <&sdhi1_pins_uhs>;
	pinctrl-names = "default", "state_uhs";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&vccq_sdhi1>;
	bus-width = <4>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	status = "okay";
	#address-cells = <0x1>;
	#size-cells = <0x0>;
	no-1-8-v;
	no-mmc;
	non-removable;
	keep-power-in-suspend;

	wifi@1 {
		reg = <0x1>;
		compatible = "brcm,bcm4329-fmac";
	};
};

&wdt0 {
	status = "okay";
	timeout-sec = <60>;
};

&wdt1 {
	status = "okay";
	timeout-sec = <60>;
};

&wdt2 {
	status = "okay";
	timeout-sec = <60>;
};

&poega {
	status = "okay";
};

&poegb {
	status = "okay";
};

&poegc {
	status = "okay";
};

&poegd {
	status = "okay";
};

&gpt4 {
	pinctrl-0 = <&gpt4_pins>;
	pinctrl-names = "default";
	channel = "both_AB";
	poeg = <&poega &poegb &poegc &poegd>;
	status = "disabled";
};

&ssi0 {
	pinctrl-0 = <&ssi0_pins>;
	pinctrl-names = "default";

	status = "disabled";
};

&ssi1 {
	pinctrl-0 = <&ssi1_pins>;
	pinctrl-names = "default";

	status = "okay";
};
